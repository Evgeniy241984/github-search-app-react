{"version":3,"sources":["components/Header.js","pages/SplashScreen.js","pages/About.js","data/gitHubAPI.js","redux/constants/actionTypes.js","components/SearchResult.js","utils.js","components/SearchForm.js","customHooks.js","redux/actions/reposAction.js","pages/MainSearch.js","redux/reducers/reposReducer.js","redux/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","SplashScreen","About","href","target","rel","fetchRepositories","inputValue","a","reposURL","fetch","result","ok","console","error","status","json","then","message","ActionTypes","SearchResult","repositoriesList","useSelector","state","allGitHubRepos","repositories","map","repo","id","html_url","full_name","owner","topics","watchers","license","pushed_at","updateTime","Date","toLocaleString","day","month","year","topicsList","topic","key","src","avatar_url","alt","login","name","dateTime","SearchForm","useState","searchPhrase","setSearchPhrase","isFetching","dispatch","useDispatch","debouncedValue","value","delay","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","param","type","payload","items","getResponse","placeholder","onChange","event","MainSearch","initialState","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34ef4f57.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.scss';\r\nimport { VscGithub } from 'react-icons/vsc'\r\n\r\nexport const Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header__logo\">\r\n            <NavLink \r\n                    className=\"navbar__link\"\r\n                    to=\"/github-search-app-react\"\r\n                >\r\n                <VscGithub className=\"header__logo_main\" />\r\n            </NavLink>         \r\n        </div>\r\n       \r\n        <nav className=\"navbar\"> \r\n            <ul className=\"navbar__list\">\r\n                <li>\r\n                <NavLink \r\n                        className=\"navbar__link\"\r\n                        to=\"/about\"\r\n                    >\r\n                        About\r\n                </NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n    </div> \r\n)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './SplashScreen.scss';\r\n\r\nexport const SplashScreen = () => (\r\n    <div className=\"splashscreen\">\r\n        <h2>\r\n            Hello, Friend! \r\n        </h2>\r\n        <h3>\r\n        Click the button to start searching for GitHub repositories.\r\n        </h3>\r\n        <NavLink \r\n                    className=\"splashscreen_button\"\r\n                    to=\"/main-search\"\r\n                >\r\n                    Start Search\r\n        </NavLink>  \r\n    </div>\r\n)","import React from 'react';\r\n\r\nexport const About = () => {\r\n     return (\r\n        <>\r\n            <h3>Web application, which lists GitHub repositories by search term.</h3>\r\n            <p>GitHub repo: <a href=\"https://github.com/Evgeniy241984/github-search-app-react\" target=\"_blank\" rel=\"noreferrer\"> Github-search-app-react </a></p>\r\n            <p>Used API: <a href=\"https://api.github.com\" target=\"_blank\" rel=\"noreferrer\">https://api.github.com </a></p>\r\n            <p>Features: </p>\r\n            <ol>\r\n                <li>\r\n                    <p>The project was developed as a single page application on React</p>\r\n                </li>\r\n                <li>\r\n                    <p>Has Redux State management</p>\r\n                </li>\r\n                <li>\r\n                    <p>Used SCSS and responsive styles</p>\r\n                </li>\r\n                <li>\r\n                    <p>Search has debounce input 500 ms</p>\r\n                </li>\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n ","function getGiHubReposUrl(repoName) {\r\n    return `https://api.github.com/search/repositories?q=${repoName}`;\r\n}\r\n\r\nconst fetchRepositories = async (inputValue) => {\r\n    try {\r\n        const reposURL = getGiHubReposUrl(inputValue);\r\n        const result = await fetch(reposURL);\r\n\r\n        if (!result.ok) {\r\n            console.error('Could not fetch', result.status);\r\n            return false;\r\n        }\r\n        return await result.json()\r\n            .then(result => result)\r\n    }\r\n    \r\n    catch (error) {\r\n        console.error('Could not fetch', error.message);\r\n        return false;\r\n    };;\r\n    \r\n} \r\n\r\nexport default fetchRepositories;","export const ActionTypes = {\r\n    SET_REPOSITORIES: \"SET_REPOSITORIES\",\r\n    SET_IS_FETCHING: \"SET_IS_FETCHING\",\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDateTimeFromUTC } from '../utils'\r\nimport { RiGitRepositoryLine } from 'react-icons/ri';\r\nimport { IoStarOutline } from 'react-icons/io5';\r\nimport './SearchResult.scss';\r\n\r\nexport const SearchResult = () => {\r\n    const repositories = useSelector((state) => state.allGitHubRepos.repositories);\r\n    \r\n    const repositoriesList = repositories.map((repo) => {\r\n        const {id, html_url, full_name, owner, topics, watchers, license, pushed_at} = repo;\r\n\r\n        const updateTime = getDateTimeFromUTC(pushed_at);\r\n\r\n        const topicsList = topics.map((topic, key) => {\r\n\r\n            return (\r\n                <a key={key} href={`https://github.com/topics/${topic}`} className=\"search-item__topic\">{topic}</a>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <li className=\"search-result__item\" key={id}>\r\n                    <div className=\"search-item__icon\">\r\n                        <RiGitRepositoryLine className=\"search-item__icon_repo\"/>\r\n                    </div>\r\n                    <div className=\"search-item__description\">\r\n                        <div >\r\n                            <a className=\"search-item__repo-name\" href={html_url}>{full_name}</a>   \r\n                        </div>\r\n\r\n                        <p className=\"search-item__owner\">\r\n                            <img className=\"search-item__owner_img\" src={owner.avatar_url} alt={owner.login} />\r\n                            <strong>{owner.login}</strong> \r\n                        </p>\r\n                        <div className=\"search-item__topicList\">\r\n                            {topicsList}\r\n                        </div>\r\n                        <div className=\"search-item__meta\">\r\n                            <div className=\"meta__stargazers\">\r\n                                <IoStarOutline className=\"meta__stargazers_icon\"/>\r\n                                {watchers}\r\n                            </div>\r\n                            <div className=\"meta__license\">\r\n                                {license == null ? \r\n                                    'No license' : license.name}\r\n                            </div>\r\n                            <div className=\"meta__last-update\">  \r\n                                <span>    \r\n                                    Updated on {\" \"} \r\n                                </span> \r\n                                <time dateTime={pushed_at}>\r\n                                    {updateTime}\r\n                                </time> \r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n            </li>           \r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul> \r\n            {repositoriesList}\r\n        </ul>  \r\n    )\r\n\r\n}\r\n\r\n","export function getDateTimeFromUTC(dt) {\r\n    const date = new Date(dt);\r\n    const options = {\r\n        day: 'numeric',\r\n        month: 'long',\r\n        year: 'numeric'\r\n    }\r\n\r\n    return date.toLocaleString(\"en-US\", options)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport fetchRepositories from '../data/gitHubAPI';\r\nimport { useDebounce } from '../customHooks';\r\nimport {setIsFetching, setRepositories} from '../redux/actions/reposAction';\r\nimport { SearchResult } from './SearchResult';\r\nimport './SearchForm.scss'\r\n\r\n\r\nexport const SearchForm = () => {\r\n    const [searchPhrase, setSearchPhrase] = useState('');\r\n    const isFetching = useSelector(state => state.allGitHubRepos.isFetching); \r\n    const dispatch = useDispatch();\r\n\r\n    const debouncedValue = useDebounce( searchPhrase, 500);\r\n    \r\n    useEffect(() => {\r\n\r\n      const getResponse = async param => {\r\n        dispatch(setIsFetching(true));\r\n        const result = await fetchRepositories(param);\r\n        dispatch(setRepositories(result.items));\r\n      }\r\n      \r\n        if (debouncedValue) {\r\n          getResponse(debouncedValue);\r\n        }  \r\n      },[dispatch, debouncedValue]\r\n    );\r\n\r\n    const handleInputChange = (event) => {\r\n      const value = event.target.value;\r\n\r\n      setSearchPhrase(value) \r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"main-search\">\r\n            <form className=\"search-form\"> \r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"search-form__input\"\r\n                        placeholder=\"Search repositories\"\r\n                        value={searchPhrase}\r\n                        onChange={handleInputChange}\r\n                    />\r\n            </form>\r\n        </div> \r\n        <div className=\"search-result\">\r\n          {isFetching === true\r\n              ? \r\n                <div className=\"search-form__fetching\">Searching...</div>\r\n              :\r\n                <SearchResult />\r\n            }\r\n        \r\n      </div> \r\n    </>       \r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n\r\n// Hook\r\nexport function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }"," import { ActionTypes } from \"../constants/actionTypes\"   \r\n \r\n export const setRepositories = (repositories) => {\r\n     return {\r\n        type: ActionTypes.SET_REPOSITORIES,\r\n        payload: repositories,\r\n     }\r\n };\r\n\r\n export const setIsFetching = (bool) => {\r\n     return {\r\n         type: ActionTypes.SET_IS_FETCHING,\r\n         payload: bool,\r\n     }\r\n};","import React from 'react';\r\nimport { SearchForm } from '../components/SearchForm';\r\n\r\nexport const MainSearch = () => {\r\n\r\n    return (\r\n        <>\r\n            <SearchForm />\r\n        </>\r\n        \r\n    )\r\n}","import { ActionTypes } from \"../constants/actionTypes\"\r\n\r\nconst initialState = {\r\n    repositories: [],\r\n    isFetching: false,\r\n}\r\n\r\nexport const reposReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.SET_REPOSITORIES: \r\n            return { \r\n                ...state, \r\n                repositories: payload,\r\n                isFetching: false \r\n            };\r\n        case ActionTypes.SET_IS_FETCHING: \r\n            return {\r\n                ...state,\r\n                isFetching: payload\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {createStore} from 'redux';\r\nimport {reposReducer} from './reposReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    allGitHubRepos: reposReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, {}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() );\r\n\r\nexport default store;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {Header} from './components/Header';\nimport {SplashScreen} from './pages/SplashScreen';\nimport {About} from './pages/About';\nimport {MainSearch} from './pages/MainSearch';\nimport store from './redux/reducers/index';\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Header/>\n        <div className=\"page__container\">\n          <Switch>\n            <Route path={'/github-search-app-react/'} exact component = {SplashScreen} />\n            <Route path={'/about'} exact component = {About} />\n            <Route path={'/main-search'} exact component = {MainSearch} />\n          </Switch>\n        </div> \n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}